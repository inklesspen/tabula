# SPDX-FileCopyrightText: 2021 Rose Davidson <rose@metaclassical.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

[build-system]
build-backend = 'mesonpy'
requires = ['meson-python', 'cffi']

[project]
authors = [
  {name = 'Rose Davidson', email = 'rose@metaclassical.com'},
]
# complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
# TODO: update to https://peps.python.org/pep-0639/ when appropriate
# see also https://github.com/mesonbuild/meson-python/issues/270
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Artistic Software",
  "Topic :: Text Editors :: Word Processors",
  "Topic :: Text Processing :: Fonts",
  "Topic :: Text Processing :: Markup :: Markdown",
]
dependencies = [
  'attrs',
  'cffi',
  'pygtrie',
  'markdown-it-py',
  'python-dateutil',
  'timeflake',
  'trio',
  'trio-util',
  'tricycle',
  'sqlalchemy',
  'msgspec',
  'cattrs',
  'jeepney',
  'outcome',
  'libevdev',
]
description = 'cool as hecc'
dynamic = ['version']
name = 'tabula'
readme = 'README.md'
requires-python = '>=3.12'

[project.optional-dependencies]
# consider using https://packaging.python.org/en/latest/specifications/dependency-specifiers/#environment-markers
# to require these on mac os: platform_system=="Darwin"
devel = ['black', 'flake8', 'Flake8-pyproject']
test = ['Pillow', 'pytest', 'pytest-trio', 'pytest-benchmark']

[project.scripts]
"list-tabula-fonts" = "tabula.scripts:list_fonts_cli"
tabula = "tabula.app:main"

[tool.ruff]
extend-exclude = []
line-length = 140

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = []
select = ["E4", "E7", "E9", "F", "B", "I", "RUF012"]

[tool.ruff.format]
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.black]
line-length = 140
target-version = ['py312']

[tool.flake8]
exclude = [".tox", ".eggs", "ci/templates", "build", "dist"]
ignore = ["E203", "E704"]
max-line-length = 140

# Consider if we care about limited-api.
# [tool.meson-python]
# limited-api = true
